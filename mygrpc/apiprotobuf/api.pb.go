// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package happylemon_api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	GrpcRequest
	GrpcResponse
*/
package happylemon_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GrpcRequest struct {
	Act  string `protobuf:"bytes,1,opt,name=act" json:"act,omitempty"`
	Para string `protobuf:"bytes,2,opt,name=para" json:"para,omitempty"`
}

func (m *GrpcRequest) Reset()                    { *m = GrpcRequest{} }
func (m *GrpcRequest) String() string            { return proto.CompactTextString(m) }
func (*GrpcRequest) ProtoMessage()               {}
func (*GrpcRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GrpcRequest) GetAct() string {
	if m != nil {
		return m.Act
	}
	return ""
}

func (m *GrpcRequest) GetPara() string {
	if m != nil {
		return m.Para
	}
	return ""
}

type GrpcResponse struct {
	Ret string `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
}

func (m *GrpcResponse) Reset()                    { *m = GrpcResponse{} }
func (m *GrpcResponse) String() string            { return proto.CompactTextString(m) }
func (*GrpcResponse) ProtoMessage()               {}
func (*GrpcResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GrpcResponse) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

func init() {
	proto.RegisterType((*GrpcRequest)(nil), "happylemon.api.GrpcRequest")
	proto.RegisterType((*GrpcResponse)(nil), "happylemon.api.GrpcResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApiConn service

type ApiConnClient interface {
	GrpcAct(ctx context.Context, in *GrpcRequest, opts ...grpc.CallOption) (*GrpcResponse, error)
}

type apiConnClient struct {
	cc *grpc.ClientConn
}

func NewApiConnClient(cc *grpc.ClientConn) ApiConnClient {
	return &apiConnClient{cc}
}

func (c *apiConnClient) GrpcAct(ctx context.Context, in *GrpcRequest, opts ...grpc.CallOption) (*GrpcResponse, error) {
	out := new(GrpcResponse)
	err := grpc.Invoke(ctx, "/happylemon.api.ApiConn/GrpcAct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiConn service

type ApiConnServer interface {
	GrpcAct(context.Context, *GrpcRequest) (*GrpcResponse, error)
}

func RegisterApiConnServer(s *grpc.Server, srv ApiConnServer) {
	s.RegisterService(&_ApiConn_serviceDesc, srv)
}

func _ApiConn_GrpcAct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiConnServer).GrpcAct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/happylemon.api.ApiConn/GrpcAct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiConnServer).GrpcAct(ctx, req.(*GrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiConn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "happylemon.api.ApiConn",
	HandlerType: (*ApiConnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GrpcAct",
			Handler:    _ApiConn_GrpcAct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcb, 0x48, 0x2c, 0x28, 0xa8, 0xcc, 0x49, 0xcd, 0xcd,
	0xcf, 0xd3, 0x4b, 0x2c, 0xc8, 0x54, 0x32, 0xe6, 0xe2, 0x76, 0x2f, 0x2a, 0x48, 0x0e, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0x4e, 0x4c, 0x2e, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x02, 0x31, 0x85, 0x84, 0xb8, 0x58, 0x0a, 0x12, 0x8b, 0x12, 0x25, 0x98, 0xc0, 0x42,
	0x60, 0xb6, 0x92, 0x02, 0x17, 0x0f, 0x44, 0x53, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x48, 0x57,
	0x51, 0x2a, 0x5c, 0x57, 0x51, 0x6a, 0x89, 0x51, 0x20, 0x17, 0xbb, 0x63, 0x41, 0xa6, 0x73, 0x7e,
	0x5e, 0x9e, 0x90, 0x1b, 0x17, 0x3b, 0x48, 0xb1, 0x63, 0x72, 0x89, 0x90, 0xb4, 0x1e, 0xaa, 0xed,
	0x7a, 0x48, 0x56, 0x4b, 0xc9, 0x60, 0x97, 0x84, 0x58, 0xa1, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0x80,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xb9, 0x55, 0xd2, 0xcd, 0x00, 0x00, 0x00,
}
